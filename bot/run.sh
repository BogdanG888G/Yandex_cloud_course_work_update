#!/bin/bash

# ---------------------------------------------------------
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã Wildberries
# ---------------------------------------------------------

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env
if [ ! -f ".env" ]; then
  echo -e "\e[31m‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ\e[0m"
  exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
export $(grep -v '^#' .env | xargs)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_LOW=0
DEFAULT_HIGH=1000000
DEFAULT_DISCOUNT=0

# –ï—Å–ª–∏ –µ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -ge 4 ]; then
  URL=$1
  LOW=${2:-$DEFAULT_LOW}
  HIGH=${3:-$DEFAULT_HIGH}
  DISCOUNT=${4:-$DEFAULT_DISCOUNT}
else
  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥
  echo -e "\n\e[36m–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞—Ä—Å–∏–Ω–≥–∞:\e[0m"
  read -p "‚Üí –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é WB: " URL
  read -p "‚Üí –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (—Ä—É–±): " LOW
  read -p "‚Üí –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (—Ä—É–±): " HIGH
  read -p "‚Üí –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ (%): " DISCOUNT
fi

# –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
export URL
export LOW=${LOW:-$DEFAULT_LOW}
export HIGH=${HIGH:-$DEFAULT_HIGH}
export DISCOUNT=${DISCOUNT:-$DEFAULT_DISCOUNT}

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
echo -e "\n\e[32müöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã...\e[0m"
docker-compose up -d --build
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
wait_for_service() {
  local host=$1
  local port=$2
  local timeout=60
  local start_time=$(date +%s)

  echo -n "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ $host..."
  while ! nc -z $host $port >/dev/null 2>&1; do
    sleep 1
    local current_time=$(date +%s)
    if [ $((current_time - start_time)) -gt $timeout ]; then
      echo "‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ $host!"
      exit 1
    fi
  done
  echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
wait_for_service localhost 5432    # PostgreSQL
wait_for_service localhost 8088    # Superset
wait_for_service localhost 5000    # API

# –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
echo -e "\nüåê –°—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
echo "Superset:    http://localhost:8088 (admin/admin)"
echo "API Docs:    http://localhost:5000/docs"
echo "Telegram Bot: t.me/$(docker inspect -f '{{range .Config.Env}}{{println .}}{{end}}' telegram_bot | grep BOT_TOKEN | cut -d= -f2 | cut -d: -f1)_bot"

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Superset
if which xdg-open >/dev/null; then
  xdg-open "http://localhost:8088"
elif which open >/dev/null; then
  open "http://localhost:8088"
fi

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ª–æ–≥–æ–≤
echo -e "\nüìù –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
PS3='–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å: '
options=("–ü–∞—Ä—Å–µ—Ä" "API" "–ë–æ—Ç" "Superset" "–í—ã—Ö–æ–¥")
select opt in "${options[@]}"
do
  case $opt in
    "–ü–∞—Ä—Å–µ—Ä")
      docker logs -f wb_parser
      ;;
    "API")
      docker logs -f parser_api
      ;;
    "–ë–æ—Ç")
      docker logs -f telegram_bot
      ;;
    "Superset")
      docker logs -f superset_parcer
      ;;
    "–í—ã—Ö–æ–¥")
      break
      ;;
    *) echo "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä $REPLY";;
  esac
done

echo -e "\n–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã: docker-compose down"